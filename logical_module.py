
import requests
from  datetime import datetime, timedelta
from collections import Counter


class WeatherApp:
    """
    –ö–ª–∞—Å—Å –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫—É—é —á–∞—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≤ —á–∞—Å—Ç–∏
    –∑–∞–ø—Ä–æ—Å–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å 'https://openweathermap.org/'
    –∏ –≤—ã–≤–æ–¥–∞ –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """

    @staticmethod
    def get_weather(city, self):
        """
        –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞. –í—ã–ø–æ–ª–Ω—è–µ—Ç API-–∑–∞–ø—Ä–æ—Å —Å —Å–∞–π—Ç–∞
        'https://openweathermap.org/'.

        Args:
            city: –ì–æ—Ä–æ–¥ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø–æ–≥–æ–¥–∞
            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ 'MainWindow' –º–æ–¥—É–ª—è 'gui_modul'.

        Returns:
            –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ
            'json'. –ú–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞
            'display_weather' –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

            –¢–∞–∫–∂–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –±–µ—Ä–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö
            –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö –≥–æ—Ä–æ–¥–∞ (–¥–æ–ª–≥–æ—Ç–∞ –∏ —à–∏—Ä–æ—Ç–∞), –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∑–∞–ø—Ä–æ—à–µ–Ω–∞
            –ø–æ–≥–æ–¥–∞ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞
            –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è. –î–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ
            'get_weather_forecast'.

            –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π, —ç—Ç–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            –≤ –º–µ—Ç–æ–¥–µ 'weather_error' –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
        """

        #  –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á.
        api_key = '29cc733366e62c9b6a691e87b96b2f3a'

        # –ê–¥—Ä–µ—Å –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö.
        url = (f'https://api.openweathermap.org/data/2.5/weather?q='
               f'{city}&appid={api_key}&units=metric&lang=ru')

        try:
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()

            if data['cod'] == 200:
                # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞
                # —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..
                WeatherApp.display_weather(data, self)
                lon = data['coord']['lon']
                lat = data['coord']['lat']

                # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ü–µ–ª—è—Ö –ø–æ–ª—É—á–µ–Ω–∏—è
                # –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ 3 –¥–Ω—è.
                WeatherApp.get_weather_forecast(lon, lat, self)

                print(data)  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å. –î–ª—è –≤–Ω—É—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–ø—Ä–æ—Å–∞, –∏ –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        # –æ—à–∏–±–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        except requests.exceptions.HTTPError as HTTP_error:
            match response.status_code:
                case 400:
                    WeatherApp.weather_error(
                        'Bad Request\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞', self)
                case 401:
                    WeatherApp.weather_error(
                        'Unauthorized\nAPI-key –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω/–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω', self)
                case 403:
                    WeatherApp.weather_error('Forbidden\n–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω', self)
                case 404:
                    WeatherApp.weather_error('Not Found\n–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω', self)
                case 500:
                    WeatherApp.weather_error('Internal Server Error\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                                       '–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ', self)
                case 502:
                    WeatherApp.weather_error(
                        ' Bad Gateway\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', self)
                case 503:
                    WeatherApp.weather_error(
                        'Service Unavailable\n–°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', self)
                case 504:
                    WeatherApp.weather_error(
                        'Gateway Timeout\n–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç', self)
                case _:
                    WeatherApp.weather_error(
                        f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ HTTP\n{HTTP_error} ', self)


        except requests.exceptions.ConnectionError:
            WeatherApp.weather_error(
                f'Connection Error\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç.', self)

        except requests.exceptions.Timeout:
            WeatherApp.weather_error(f'Timeout Error\n–î–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞.', self)

        except requests.exceptions.TooManyRedirects:
            WeatherApp.weather_error(f'Too many Redirects\n–ü—Ä–æ–≤–µ—Ä—å URL.', self)

        except requests.exceptions.RequestException as request_error:
            WeatherApp.weather_error(f'Request Error\n{request_error}', self)

    @staticmethod
    def display_weather(data, self):
        """

        Args:
            data: –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–æ–¥–µ 'get_weather'
            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MainWindow –º–æ–¥—É–ª—è 'gui_modul'.

        Returns:
             –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω—É—é
        –≤ –º–µ—Ç–æ–¥–µ get_weather.
        """
        city_name = data['name']

        # –ì–æ—Ä–æ–¥ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª –º–µ—Ç–æ–¥–æ–º 'save_list_city'
        WeatherApp.save_list_city(city_name)
        self.city_label.setText(f'{city_name}')

        # –ü–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞, —Ç.–∫. –æ–Ω –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –ø—Ä–∏ –≤—ã–≤–æ–¥–µ
        # –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ 'weather_error'.
        self.temperature_now_label.setStyleSheet('font-size: 40px; '
                                           'font-weight: bold')
        temperature_value = data['main']['temp']
        self.temperature_now_label.setText(f'{temperature_value:.0f} C¬∞')
        feeling_value = data['main']['feels_like']
        self.feels_like_label.setText(f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫\n'
                                      f'       {feeling_value:.0f} C¬∞')
        weather_id = data['weather'][0]['id']
        self.emoji_label.setText(WeatherApp.get_emoji(weather_id))
        description_value = data['weather'][0]['description']
        self.description_label.setText(f'{description_value.capitalize()}')

        # –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–≥–æ–¥—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö
        # –¥–∞–Ω–Ω—ã—Ö. –ü–æ—ç—Ç–æ–º—É —ç—Ç–∏ –æ—à–∏–±–∫–∏ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏
        # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω.
        try:
            visibility_value = int(data['visibility']/1000)
            self.visibility_label.setText(f'–í–∏–¥–∏–º–æ—Å—Ç—å\n   '
                                          f' {visibility_value}–∫–º')
        except KeyError:
            self.visibility_label.setText('–í–∏–¥–∏–º–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')

        # get_wind_rose - –º–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞.
        # –û–ø–∏—Å–∞–Ω –Ω–∏–∂–µ.
        try:
            wind_speed_value = data['wind']['speed']
            wind_deg_value = data['wind']['deg']
            self.wind_label.setText(
                f'{wind_speed_value:.0f} –º/—Å\n'
                f'{WeatherApp.get_wind_rose(wind_deg_value)}')
        except KeyError:
            self.wind_label.setText('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ç—Ä–µ\n–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')

        try:
            humidity_value = data['main']['humidity']
            self.humidity_label.setText(f'  üíß\n{humidity_value} %')
        except KeyError:
            self.humidity_label.setText('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏\n '
                                        '–Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞')

        try:
            pressure_value = data['main']['pressure'] * 0.75
            self.pressure_label.setText(f'   {pressure_value:.0f}\n–º–º —Ä—Ç.—Å—Ç.')
        except KeyError:
            self.pressure_label.setText('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–≤–ª–µ–Ω–∏–∏\n–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')


    @staticmethod
    def get_weather_forecast(lon, lat, self):
        """
             –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞. –í—ã–ø–æ–ª–Ω—è–µ—Ç API-–∑–∞–ø—Ä–æ—Å —Å —Å–∞–π—Ç–∞
        'https://openweathermap.org/'.

        Args:
            lon: –î–æ–ª–≥–æ—Ç–∞. –ü–æ–ª—É—á–µ–Ω–∞ –≤ –º–µ—Ç–æ–¥–µ get_weather –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
            lat: –®–∏—Ä–æ—Ç–∞. –ü–æ–ª—É—á–µ–Ω–∞ –≤ –º–µ—Ç–æ–¥–µ get_weather –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ 'MainWindow'.

        Returns:
            –ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ
            'json'. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞–µ—Ç –≤ –º–µ—Ç–æ–¥
            'display_weather_forecast' –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç—Ä–∞–∂–µ–Ω–∏—è –Ω–∞
            —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

            –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π, —ç—Ç–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            –≤ –º–µ—Ç–æ–¥–µ 'forecast_error' –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
        """

        # –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ
        # https://openweathermap.org/ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
        api_key = '29cc733366e62c9b6a691e87b96b2f3a'
        url = (f'https://api.openweathermap.org/data/2.5/forecast?'
               f'lat={lat}&lon={lon}&appid={api_key}&units=metric&lang=ru')

        try:
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()

            if int(data['cod']) == 200:

                # –ù–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏–º–µ–µ—Ç—Å—è –≤–æ—Å–µ–º—å 3-—á–∞—Å–æ–≤—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤.
                # –ò—Ö –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –∏ –ø–æ—Å—á–∏—Ç–∞—Ç—å
                # —Å—Ä–µ–¥–Ω—é—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.
                # –§–æ—Ä–º–∏—Ä—É—é—Ç—Å—è —Å–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
                # (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã,–∫–æ–¥ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π).
                # –í –∫–∞–∂–¥–æ–º —Å–ø–∏—Å–∫–µ –ø–æ 8 –ø–æ–∑–∏—Ü–∏–π.
                list_temp_1 = []
                list_description_1 = []
                list_weather_id_1 = []

                list_temp_2 = []
                list_description_2 = []
                list_weather_id_2 = []

                list_temp_3 = []
                list_description_3 = []
                list_weather_id_3 = []

                # –ó–¥–µ—Å—å –≤—ã–±–∏—Ä–∞–µ–º –ø–æ –∫–ª—é—á—É ['dt'] –≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                # —Ç–æ–ª—å–∫–æ –¥–∞—Ç—ã –±–ª–∏–∂–∞–π—à–∏—Ö —Ç—Ä–µ—Ö –¥–Ω–µ–π –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤
                # —Å–ø–∏—Å–∫–∏.
                for i in data['list']:
                    if (int(datetime.fromtimestamp(i['dt']).strftime('%d'))
                            == int((datetime.now()+timedelta(days=1)).strftime('%d'))):
                        list_temp_1.append(i['main']['temp'])
                        list_description_1.append(i['weather'][0]['description'])
                        list_weather_id_1.append(i['weather'][0]['id'])


                    elif (int(datetime.fromtimestamp(i['dt']).strftime('%d'))
                            == int((datetime.now()+timedelta(days=2)).strftime('%d'))):
                        list_temp_2.append(i['main']['temp'])
                        list_description_2.append(i['weather'][0]['description'])
                        list_weather_id_2.append(i['weather'][0]['id'])

                    elif (int(datetime.fromtimestamp(i['dt']).strftime('%d'))
                            == int((datetime.now()+timedelta(days=3)).strftime('%d'))):
                        list_temp_3.append(i['main']['temp'])
                        list_description_3.append(i['weather'][0]['description'])
                        list_weather_id_3.append(i['weather'][0]['id'])

                # –ù–æ–≤—ã–µ —Å–ø–∏—Å–∫–∏ —Å —É—Å—Ä–µ–¥–Ω–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã,
                # –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ–≥–æ–¥—ã –∏ id.
                forecast_temp = []
                forecast_description = []
                forecast_id = []

                # –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–æ–±–∞–≤–ª—è–µ–º
                # –≤ —Å–ø–∏—Å–æ–∫
                forecast_temp.append(sum(list_temp_1) / len(list_temp_1))
                forecast_temp.append(sum(list_temp_2) / len(list_temp_2))
                forecast_temp.append(sum(list_temp_3) / len(list_temp_3))

                # –ó–¥–µ—Å—å –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
                # –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ —Ç–∞–∫ –∂–µ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è
                # 2 —Å–ø–∏—Å–∫–∞.
                most_pop_descr_1 = (
                    Counter(list_description_1).most_common(1))[0][0]
                forecast_description.append(most_pop_descr_1)

                most_pop_descr_2 = (
                    Counter(list_description_2).most_common(1))[0][0]
                forecast_description.append(most_pop_descr_2)

                most_pop_descr_3 = (
                    Counter(list_description_3).most_common(1))[0][0]
                forecast_description.append(most_pop_descr_3)

                most_pop_id_1 = (
                    Counter(list_weather_id_1).most_common(1))[0][0]
                forecast_id.append(most_pop_id_1)
                most_pop_id_2 = (
                    Counter(list_weather_id_2).most_common(1))[0][0]
                forecast_id.append(most_pop_id_2)

                most_pop_id_3 = (
                    Counter(list_weather_id_3).most_common(1))[0][0]
                forecast_id.append(most_pop_id_3)

                # –°–æ–æ—Ç–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ö —Å–ø–∏—Å–∫–æ–≤ –ø–æ –∏–Ω–¥–µ–∫—Å—É. –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
                # —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
                #                 (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–µ, id –ø–æ–≥–æ–¥—ã)
                zipped = zip(forecast_temp, forecast_description,
                                 forecast_id)
                final_data = list(zipped)

                print(final_data)  # –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

                # –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ—Ç–æ–¥—É 'display_weather_forecast'
                WeatherApp.display_weather_forecast(final_data, self)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ò –≤—ã–≤–æ–¥ –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω
        # –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ 'forecast_error'.
        except requests.exceptions.HTTPError as HTTP_error:
            match response.status_code:
                case 400:
                    WeatherApp.forecast_error(
                        'Bad Request\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞', self)
                case 401:
                    WeatherApp.forecast_error(
                        'Unauthorized\nAPI-key –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω/–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω',
                        self)
                case 403:
                    WeatherApp.forecast_error('Forbidden\n–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
                                             self)
                case 404:
                    WeatherApp.forecast_error('Not Found\n–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω',
                                             self)
                case 500:
                    WeatherApp.forecast_error(
                        'Internal Server Error\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                        '–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ', self)
                case 502:
                    WeatherApp.forecast_error(
                        ' Bad Gateway\n–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞', self)
                case 503:
                    WeatherApp.forecast_error(
                        'Service Unavailable\n–°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç', self)
                case 504:
                    WeatherApp.forecast_error(
                        'Gateway Timeout\n–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç', self)
                case _:
                    WeatherApp.forecast_error(
                        f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ HTTP\n{HTTP_error} ', self)


        except requests.exceptions.ConnectionError:
            WeatherApp.forecast_error(
                f'Connection Error\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç.',
                self)

        except requests.exceptions.Timeout:
            WeatherApp.forecast_error(f'Timeout Error\n–î–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞.',
                                     self)

        except requests.exceptions.TooManyRedirects:
            WeatherApp.forecast_error(f'Too many Redirects\n–ü—Ä–æ–≤–µ—Ä—å URL.', self)

        except requests.exceptions.RequestException as request_error:
            WeatherApp.forecast_error(f'Request Error\n{request_error}', self)

    @staticmethod
    def display_weather_forecast(data, self):
        """
            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–µ—Ç–æ–¥–∞ 'get_weather_forecast'
        Args:
            data: –°–ø–∏—Å–æ–∫ –∏–∑ —Ç—Ä–µ—Ö –∫–æ—Ä—Ç–µ–∂–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
                (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã, id –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π).
            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ 'MainWindow'.

        Returns:
            –í—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥–Ω–æ–∑–µ –ø–æ–≥–æ–¥—ã
            –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 3 –¥–Ω—è.

        """

        # –ó–∞–ø–æ–ª–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        # (–∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞ MainWindow).

        self.day_1_label.setText(f'{(datetime.now()+
                                     timedelta(days=1)).strftime('%d.%m')}')
        self.day_2_label.setText(f'{(datetime.now()+
                                     timedelta(days=2)).strftime('%d.%m')}')
        self.day_3_label.setText(f'{(datetime.now()+
                                     timedelta(days=3)).strftime('%d.%m')}')


        # get_emoji - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ id –ø–æ–≥–æ–¥—ã.
        # –û–ø–∏—Å–∞–Ω –Ω–∏–∂–µ
        emoji_value_1 = WeatherApp.get_emoji(data[0][2])
        self.forecast_emoji_label_1.setText(f'{emoji_value_1}')


        emoji_value_2 = WeatherApp.get_emoji(data[1][2])
        self.forecast_emoji_label_2.setText(f'{emoji_value_2}')

        emoji_value_3 = WeatherApp.get_emoji(data[2][2])
        self.forecast_emoji_label_3.setText(f'{emoji_value_3}')

        temp_value_1 = data[0][0]
        self.forecast_label_1.setStyleSheet('font-size: 35px;'
                                            'font-weight: bold')
        self.forecast_label_1.setText(f'  {temp_value_1:.0f} C¬∞')

        temp_value_2 = data[1][0]
        self.forecast_label_2.setText(f'  {temp_value_2:.0f} C¬∞')

        temp_value_3 = data[2][0]
        self.forecast_label_3.setText(f'  {temp_value_3:.0f} C¬∞')

        descr_value_1 = data[0][1]
        self.forecast_description_1.setText(f'{descr_value_1.capitalize()}')

        descr_value_2 = data[1][1]
        self.forecast_description_2.setText(f'{descr_value_2.capitalize()}')

        descr_value_3 = data[2][1]
        self.forecast_description_3.setText(f'{descr_value_3.capitalize()}')


    @staticmethod
    def weather_error(message, self):
        """
            –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–µ—Ç–æ–¥–µ
            'get_weather'.

        Args:
            message: –ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–∑ –º–µ—Ç–æ–¥–∞
                     get_weather'.

            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ 'MainWindow'.

        Returns:
            –°–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤ –≤–∏–¥–∂–µ—Ç–∞—Ö
            'temperature_now_label' –∏ 'forecast_label_1'
            –∫–ª–∞—Å—Å–∞ 'MainWindow'.
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–∞—Ö —Å—Ç–∏—Ä–∞–µ—Ç—Å—è.

        """
        self.city_label.clear()
        self.temperature_now_label.clear()
        self.feels_like_label.clear()
        self.emoji_label.clear()
        self.description_label.clear()
        self.visibility_label.clear()
        self.humidity_label.clear()
        self.wind_label.clear()
        self.pressure_label.clear()
        self.forecast_emoji_label_1.clear()
        self.forecast_emoji_label_2.clear()
        self.forecast_emoji_label_3.clear()
        self.forecast_label_1.clear()
        self.forecast_label_2.clear()
        self.forecast_label_3.clear()
        self.forecast_description_1.clear()
        self.forecast_description_2.clear()
        self.forecast_description_3.clear()
        self.temperature_now_label.setStyleSheet('font-size: 20px')
        self.forecast_label_1.setStyleSheet('font-size: 20px')
        self.temperature_now_label.setText(message)
        self.forecast_label_1.setText(message)

    @staticmethod
    def forecast_error(message, self):
        """
            –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–µ—Ç–æ–¥–µ
            'get_weather_forecast'.
        Args:
            message: –ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–∑ –º–µ—Ç–æ–¥–∞
            'get_weather_forecast'.
            self: –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ 'MainWindow'

        Returns:
            –°–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤ –≤–∏–¥–∂–µ—Ç–µ forecast_label_1'
            –∫–ª–∞—Å—Å–∞ 'MainWindow'.
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–∞—Ö –æ—á–∏—â–∞–µ—Ç—Å—è.

        """
        self.forecast_emoji_label_1.clear()
        self.forecast_emoji_label_2.clear()
        self.forecast_emoji_label_3.clear()
        self.forecast_label_1.setStyleSheet('font-size: 20px')
        self.forecast_label_2.clear()
        self.forecast_label_3.clear()
        self.forecast_description_1.clear()
        self.forecast_description_2.clear()
        self.forecast_description_3.clear()
        self.forecast_label_1.setText(message)


    @staticmethod
    def save_list_city(city):
        """

        Args:
            city: –≥–æ—Ä–æ–¥.
        Returns:
            –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ñ–∞–π–ª –≥–æ—Ä–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ
            display_weather.
        """
        with open('cities.txt', 'a+') as file:
            file.write(f'{city},')

    @staticmethod
    def load_last_city():
        """

        Returns:
            –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏
            –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–∞ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π.
        """
        with open('cities.txt', 'a+') as file:
            file.seek(0)
            string = file.read()
            string = string.replace('\n', '')
            string = string.strip(',')
            list_cities = string.split(',')
            return list_cities[-1]

    @staticmethod
    def get_emoji(weather_id):
        """

        Args:
            weather_id: –ö–æ–¥ –ø–æ–≥–æ–¥—ã –ø–æ–ª—É—á–∞–µ–º—ã –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å.

        Returns:
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–º–µ—Å—Ç–æ –∫–æ–¥–∞ –≠–º–æ–¥–∑–∏. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–∞—Ö
            'display_weather_forecast' –∏ 'display_weather'

        """
        if 200 <= weather_id <= 200:
            return '‚õà'
        elif 300 <= weather_id <= 321:
            return 'üåß'
        elif 500 <= weather_id <= 531:
            return 'üåß'
        elif 600 <= weather_id <= 622:
            return 'üå®'
        elif 701 <= weather_id <= 781:
            return 'üå´'
        elif weather_id == 800:
            return '‚òÄ'
        elif 801 <= weather_id <= 803:
            return 'üå•'
        elif weather_id == 804:
            return '‚òÅ'

    @staticmethod
    def get_wind_rose(wind_deg_value):
        """
            –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –æ
            –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤–µ—Ç—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ 'display_weather'.
        Args:
            wind_deg_value: –ó–Ω–∞—á–µ–Ω–∏–µ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö.

        Returns:
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞.
        """
        if 337.5 < wind_deg_value <= 360 or 0 <= wind_deg_value < 22.5:
            return '–°–µ–≤–µ—Ä–Ω—ã–π'
        elif 22.5 <= wind_deg_value < 67.5:
            return '–°–í'
        elif 67.5 <= wind_deg_value < 112.5:
            return '–í–æ—Å—Ç–æ—á–Ω—ã–π'
        elif 112.5 <= wind_deg_value < 157.5:
            return '–Æ–í'
        elif 157.5 <= wind_deg_value < 202.5:
            return '–Æ–∂–Ω—ã–π'
        elif 202.5 <= wind_deg_value < 247.5:
            return '–Æ–ó'
        elif 247.5 <= wind_deg_value < 292.5:
            return '–ó–∞–ø–∞–¥–Ω—ã–π'
        elif 292.5 <= wind_deg_value <= 337.5:
            return '–°–ó'

